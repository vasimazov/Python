1. Пользователь вводит месяц в виде целого числа от 1 до 12.
Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
Напишите два варианта решения: через list и через dict.
month_list = [['Зима', 12, 1, 2], ['Весна', 3, 4, 5], ['Лето', 6, 7, 8], ['Осень', 9, 10, 11]]

month_num = int(input('Введите порядковый номер месяца в году (1..12): '))
if month_num in range(1, 13):
    for i, el in enumerate(month_list):
        if month_num in el[1:4]:
            print(f'Введенный номер месяца относится к сезону {el[0]}')
            break
else:
    print('Введен некорректный номер месяца!')
    
    
    
    # 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

rating = [10, 10, 5, 4, 1]
print(f"Текущий рейтинг: {rating}")

new_scores_count = int(input("Сколько вы хотите ввести новых элементов рейтинга: "))

for i in range(1, new_scores_count + 1):
    new_score = int(input("Введите новый элемент рейтинга: "))
    if new_score > 0:
        rating.append(new_score)
        rating.sort(reverse = True)
        print(f"Новый рейтинг: {rating}")
    else:
        print("Ошибка. Вы ввели не натуральное число")
        
        
        # * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый
# кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и
# словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
#
# Пример готовой структуры:
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
#
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика
# товара, например название, а значение — список значений-характеристик, например список названий товаров.
#
# Пример:
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }

goods = []
number = 0

print('Введите одной строкой название товара, цену, количество и единицу измерения')
print('В качестве разделителя позиций используйте только один символ запятой')
print('Значения цены и количества должны быть целочисленными')
print('Для завершения введите пустую строку')

while True:
    number += 1
    good_list = input(f'{number} товар: ').split(',')
    if good_list == ['']:
        break
    # Нужно ли обрабатывать ситуацию, когда введены не 4 позиции? Теоретически такую строку можно отбрасывать
    # и запрашивать повторный ввод

    goods.append((number, {'Наименование': good_list[0],
                           'Цена': int(good_list[1]),
                           'Количество': int(good_list[2]),
                           'Ед. изм.': good_list[3]}))

# Результирующий словарь
goods_dict = {}

for i, el in enumerate(list(goods[0][1].keys())):
    # Собираем для нового словаря названия ключей из первой строки goods
    goods_dict[el] = []

for i, el in enumerate(goods_dict):
    # Пустой список, в который будем записывать значения по каждому ключу
    dict_list = []

    # Собираем значения для текущего ключа результирующего словаря
    for j, el_goods in enumerate(goods):
        key_val = el_goods[1].get(el)

        # Добавляем, только если значения нет в списке
        if key_val not in dict_list:
            dict_list.append(key_val)

    # Записываем в результирующий словарь значение текущего ключа
    goods_dict[el] = dict_list

print(goods_dict)


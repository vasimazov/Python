# 6. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
# Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего.
# Требуется определить номер дня, на который общий результат спортсмена составить не менее b километров.
# Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.

# запрос данных пользователя
a = int(input("Введите расстояние первой пробежки в км: "))
b = int(input("Введите целевой результат в км: "))

counter = 1  # начальное значение счетчика дней

while a < b:
    a *= 1.1  # расчет расстояния пробежки
    counter += 1  # увеличение счетчика дней

# вывод результата
print(f"На {counter}-й день спортсмен достиг результата — не менее {b} км")


# Задание 2.
#
# Пользователь вводит целое положительное число.
# Найдите самую большую цифру в числе.
# Для решения используйте цикл while и только арифметические операции.
# Не используйте взятие по индексу.
#
# Пример:
# Ведите целое положительное число: 123456789
# Самая большая цифра в числе: 9

user = int(input('Введите целое положительное число: '))
a = user % 10
user = user // 10
while user > 0:
    if user % 10 > a:
        a = user % 10
        user = user // 10
    print(f' Самая большая цифра в числе: {a}')
    break
else:
    print('Вы ввели неправильное число :( ')
    
    
    # Задача-1: Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

my_int = 5
my_float = 1.2
my_str = "Hello world"
my_list = ['a', '2']
my_tuple = ('b', '3')
my_dict = {'city': 'Moscow', 'country': 'Russia'}

super_list = [my_int, my_float, my_str, my_list, my_tuple, my_dict]
for i in super_list:
    print(f'{i} is {type(i)}')
    
    # Задание-2: Для списка реализовать обмен значений соседних элементов, т.е.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().

my_list = ['a', 'b', 'c', 'd', 'e']
if len(my_list) % 2 == 0:
    i = 0
    while i < len(my_list):
        el = my_list[i]
        my_list[i] = my_list[i+1]
        my_list[i+1] = el
        i += 2
else:
    i = 0
    while i < len(my_list) - 1:
        el = my_list[i]
        my_list[i] = my_list[i + 1]
        my_list[i + 1] = el
        i += 2
print(my_list)


# Задача-4: Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове
my_str = input("Enter string: ")
a = my_str.split(' ')
for i, el in enumerate(a, 1):
    if len(el) > 10:
        el = el[0:10]
    print(f"{i}. - {el}")
    
    
